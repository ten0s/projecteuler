#!/bin/bash

if [ $# -ne 1 ]; then
    echo "usage: solve <problem #>"
    exit 1
fi

run_hs() {
    if [ `which ghc` ]; then
        out=`ghc $1`
        res=$?
        if [ "$res" -eq "0" ]; then
            ./$2
            rm -f *.o *.hi $2
        else
            echo $out
            exit $res
        fi
    else
        echo "Haskell is NOT installed"
        echo
        echo "sudo apt-get install ghc"
        echo "sudo apt-get install cabal-install"
        echo "cabal update"
        echo "cabal install primes"
        exit 1
    fi
}

run_erl() {
    if [ `which erlc` ]; then
        erlc lists2.erl math2.erl numbers.erl primes.erl
        erlc $1 && erl -noshell -s $2 main -s init stop
        rm -f *.beam
    else
        echo "Erlang is NOT installed"
        exit 1
    fi
}

run_sml() {
    if [ `which sml` ]; then
        cat > euler.cm <<EOF
Group is
      \$/basis.cm
      \$/smlnj-lib.cm
      list-utils.sml
      number-utils.sml
      print-utils.sml
      smlunit.sml
      ${1}
EOF
        out=`ml-build euler.cm Main.main`
        res=$?
        if [ "$res" -eq 0 ]; then
            sml @SMLload euler.x86-linux
            rm -rf euler.cm .cm/ *.x86-linux
        else
            echo $out
            exit $res
        fi
    else
        echo "SML/NJ is NOT installed"
        echo
        echo "sudo apt-get install smlnj libsmlnj-smlnj"
        exit 1
    fi
}

run_ml() {
    if [ `which corebuild` ]; then
        out=`corebuild $2.byte`
        res=$?
        if [ "$res" -eq 0 ]; then
            ./$2.byte
            rm -rf $2.byte
            rm -rf _build/
        else
            echo $out
            exit $res
        fi
    else
        echo "OCaml is NOT installed"
        echo
        echo "https://github.com/realworldocaml/book/wiki/Installation-Instructions"
        exit 1
    fi
}

run_js() {
    npm start $1
}

number=$1
filename=`ls euler$number.{hs,erl,sml,ml,js} 2> /dev/null | head -n 1`

if [ ! -z $filename ] && [ -f $filename ]; then
    ext="${filename##*.}"
    name="${filename%.*}"
    run_$ext $filename $name
else
    echo "Problem $number isn't solved yet"
    exit 1
fi
